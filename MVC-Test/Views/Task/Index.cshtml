@model MVC_Test.Models.TaskModel
@{

}
@using MVC_Test.Controllers
@using Group6Application.Models;
@using System.Data;
<script>
    $(document).ready(function () {
        $("#submit").click(function () {
            $('#submittingModal').modal('show');
            if (pageValid()) {
                submit();
            }
            else {
                $('#submittingModal').modal('hide');
            };
        });
        
    });

    function deleteTask(){
        alert("test");
        var result = confirm("Are you sure you want to Delete this Task?");
        if (result == true){
            $.ajax({
            type: "POST",
            url: "@Url.Action("Delete")",
            data: {
                tskID: @Model.ID.ToString(),
            },
            dataType: "text",
            error: function (msg){
                alert(msg);
            }
                success: function (data) {
                    var json = $.parseJSON(data);
                    if (json.submissionResult) { // Submission is true
                        alert('Task was deleted!');
                        window.history.back();
                    }
                    else {
                        alert('Task could not be deleted!');
                    }
                }
            });
        }
        else{
            return;
        }
    }

    function submit() {
        $.ajax({
            type: "POST",
            url: "@Url.Action("SaveChanges")", // must match function name in controller
            data: {
                tskID: @Model.ID.ToString(),
                taskName: $('#taskName').val(),
                description: $('#taskDescription').val(),
                checkPointID: $('#TaskCheckPointID').val(),
                startDate: $('#taskStart').val(),
                dueDate: $('#taskDue').val(),
                assignee: $('#taskAssignee').val(),
                status: $('#taskStatus').val(),
            },
            dataType: "text",
            error: function (msg) {
                alert(msg);
            },
            success: function (data) {
                var json = $.parseJSON(data);
                if (json.submissionResult) { // Submission is true
                    alert('Form was submitted!');
                    window.location.href('Task?taskID=' + json.id.toString());
                }
                else {
                    alert('Form was not submitted!');
                }
            }
        });
    }
</script>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style type="text/css">
    th {
        padding: 0 15px;
    }
    td{
        padding: 0 15px;
    }
    input {display: inline;}

    .container {
        max-width: 90%; /* adjust this value to fit your needs */
        margin: 0 auto; /* center the container horizontally */
    }
</style>
</head>
<body>
    <div class="container">
    @using (Html.BeginForm())
    {
        <form id="taskForm" method="post">
            <table>
                <tr>
                    <th>Task ID</th>
                    <th>Task Name</th>
                    <th>Task Description</th>
                    <th>CheckPoint</th>
                    <th>Start Date</th>
                    <th>Due Date</th>
                    <th>Assignee</th>
                    <th>Status</th>
                </tr>
                <tr>
                    <td><input type="number" name="taskID" id="taskID" value=@Model.ID readonly></input></td>
                    <td><input name="taskName" id="taskName" type="text" value="@Model.Name" required></input></td>
                    <td><input name="taskDescription" id="taskDescription" type="text" value="@Model.Description"></input></td>
                    <td>
                            <select name="TaskCheckPointID" id="TaskCheckPointID">
                            @{
                                foreach (int checkID in TaskController.getCheckpoints())
                                {
                                    CheckpointModel checkpoint = TaskController.getCheckpoint(checkID);
                                    if (checkID == Model.CheckpointID)
                                    {
                                        <option value=@checkID selected>@checkpoint.Name</option>
                                        continue;
                                    }
                                    <option value=@checkID>@checkpoint.Name</option>
                                }
                            }
                        </select>
                    </td>
                        <td><input name="taskStart" id="taskStart" type="date" value="@Model.Start.Value.ToString("yyyy-MM-dd")"></input></td>
                        <td><input name="taskDue" id="taskDue" type="date" value="@Model.Due.Value.ToString("yyyy-MM-dd")"></input></td>
                    <td>
                            <select name="taskAssignee" id="taskAssignee">
                            @{
                                foreach (int assigneeID in TaskController.getAssignees())
                                {
                                    EmployeeTemplate employee = TaskController.getAssignee(assigneeID);
                                    string fullName = employee.FirstName + " " + employee.LastName;
                                    if (assigneeID == Model.Assignee)
                                    {
                                        <option value=@assigneeID selected>@fullName</option>
                                        continue;
                                    }
                                    <option value=@assigneeID>@fullName</option>
                                }
                            }
                        </select>
                    </td>
                    <td>
                        <select name="taskStatus" id="taskStatus">
                            @{
                                if (Model.Status == "Incomplete")
                                {
                                    <option value="Incomplete" selected>Incomplete</option>
                                    <option value="Complete">Complete</option>
                                }
                                else
                                {
                                    <option value="Complete" selected>Complete</option>
                                    <option value="Incomplete">Incomplete</option>
                                }
                            }
                        </select>
                    </td>
                </tr>
            </table>
        </form>
    }
    </div>
    <asp:label id="myLabel" runat="server" />
    <button type="button" id="submit" name="submit" class="btn-block" onclick="submit()">Submit</button>
    <button type="button" id="delete" name="delete" class="btn-block" onclick="deleteTask()">Delete Task</button>
</body>