@model MVC_Test.Models.CheckpointViewModel
@{

}
@using MVC_Test.Controllers
@using Group6Application.Models;
@using System.Data;
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Mvc;
@using Group6Application;
<HTML>
<head>
    <link rel="stylesheet" href="~/css/bootstrap.css">
    <link rel="stylesheet" href="~/css/site.css">

    <script src="~/js/jquery-3.6.4.min.js"></script>
    <script src="~/js/bootstrap.min.js"></script>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style type="text/css">
        th {
            padding: 0 15px;
        }

        td {
            padding: 0 15px;
        }

        input {
            display: inline;
        }

        .mainTableContainer {
            display: flex;
            flex-direction: row;
        }

        .entireTableContainer {
            display: flex;
            flex-direction: column;
        }

        .main-table {
            flex: 3;
        }

        .side-table {
            flex: 1;
            margin-left: auto;
            margin-right: 0;
            flex-direction: column;
        }

        #checkpointDescription {
            resize: both;
            width: 50vw;
            height: 30vh;
        }

        #checkpointName {
            width: 30vw;
        }
    </style>
</head>
<script>
    $(document).ready(function () {
        $("#saveCheckpoint").click(function () {
            saveCheckpoint();
        });
    });

    function goBack() {
        function goBack() {
            // Get the current query string
            var queryString = window.location.search;

            // Create a URLSearchParams object from the query string
            var searchParams = new URLSearchParams(queryString);

            // Set the desired ID in the search params
            searchParams.set('id', json.id.toString());

            // Build a new URL with the updated search params
            var newUrl = window.location.pathname + '?' + searchParams.toString();

            // Navigate back to the previous page with the updated URL
            window.history.back();
            window.history.replaceState(null, '', newUrl);
        }
    }


    function saveCheckpoint() {
        $.ajax({
            type: "POST",
            url: "@Url.Action("AddCheckpointDB")", // must match function name in controller
            data: {
                Name: $('#checkpointName').val(),
                Description: $('#checkpointDescription').val(),
                ProjectID: $('#ProjectID').val(),
                StartDate: $('#StartDate').val(),
                DueDate: $('#DueDate').val(),
            },
            dataType: "text",
            error: function (msg) {
                alert(msg);
            },
            success: function (data) {
                var json = $.parseJSON(data);
                if (json.submissionResult) { // Submission is true
                    alert('Changes were saved!');
                    window.location.replace('/Department/ViewProject?id=' + json.ProjectID.toString());
                }
                else {
                    alert('Changes could not be saved!');
                }
            }
        });
    }
</script>
<body>
    <div class="entireTableContainer">
        <div class="mainTableContainer">
            <table class="main-table">
                <tr>
                    <th>Checkpoint Name</th>
                </tr>
                <tr>
                    <td><input name="checkpointName" id="checkpointName" type="text" value="" required></input></td>
                </tr>

                <tr>
                    <th colspan="2">Checkpoint Description</th>
                </tr>
                <tr>
                    <td colspan="2"><textarea name="checkpointDescription" id="checkpointDescription" type="text"></textarea></td>
                </tr>
            </table>
            <div class="side-table">
                <h3>Status</h3>
                <p>Not Started</p>

                <label for="ProjectID">Project</label>
                <select id="ProjectID" name="ProjectID" required />

                <option value="">Select Project</option>
                @{
                    foreach (SelectListItem id in Model.ProjectIDs)
                    {
                        if (!String.IsNullOrEmpty(id.Text))
                        {
                            <option value="@id.Value">@id.Text</option>
                        }

                    }
                }
                </select>

                <label for="StartDate">Start Date</label>
                <input type="date" id="StartDate" name="StartDate" required />
                <span id="StartDateRequiredAlert" class="collapse required">Required Field</span>

                <label for="DueDate">End Date</label>
                <input type="date" id="DueDate" name="DueDate" required />
                <span id="DueDateRequiredAlert" class="collapse required">Required Field</span>

                <br />
            </div>
        </div>
        <center>
            <button type="button" id="saveCheckpoint" name="saveCheckpoint">Save Changes</button>
            <a href="/Department"><button>Return</button></a>
        </center>
    </div>
</body>

</HTML>